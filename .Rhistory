data[data$Genero == 'F' | data$Genero == 'Fem', ]$Genero = 'Feminino'
data$Genero = factor(data$Genero)
summary(data$Idade)
median_age = median(data$Idade)
data[data$Idade < 0 | data$Idade > 110, ]$Idade = median_age
data[data$Idade <0 | data$Idade > 110,]
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate
removing_duplicate_id = data[-c(82),]
removing_duplicate_id
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
# Importando os dados
# Separador de colunas      # Definido as string como fatores
data = read.csv('Churn.csv', sep = ';', na.strings = '', stringsAsFactors = T)
head(data)
summary(data)
colnames(data) = c(
'Id',
'Score',
'Estado',
'Genero',
'Idade',
'Patrimonio',
'Saldo',
'Produtos',
'TemCartCredito',
'Ativo',
'Salario',
'Saiu'
)
head(data)
OccurrencesofStates <- table(data$Estado)
barplot(
OccurrencesofStates,
main = 'Ocorrência dos estados',
xlab = 'Estado',
ylab = 'Quantidade'
)
OccurrencesofGender <- table(data$Genero)
barplot(
OccurrencesofGender,
main = 'Ocorrência dos Gêneros',
xlab = 'Gênero',
ylab = 'Quantidade'
)
print('Score')
summary(data$Score)
boxplot(
data$Score,
main = 'Resumo do Score dos Cliente',
ylab = 'Score'
)
hist(
data$Score,
main = 'Resumo do Score dos Clientes',
xlab = 'Score',
ylab = 'Frequência'
)
print('Idade')
summary(data$Idade)
boxplot(data$Idade)
hist(data$Idade)
print('Saldo')
summary(data$Saldo)
boxplot(data$Saldo)
hist(data$Saldo)
print('Salario')
print(data$Salario)
summary(data$Salario)
boxplot(data$Salario)
hist(data$Salario)
data[!complete.cases(data),]
summary(data$Salario)
median(data$Salario, na.rm = T)
data[is.na(data$Salario),]$Salario = median(data$Salario,na.rm = T)
data[!complete.cases(data$Salario),]
summary(data$Salario)
data$Genero
unique(data$Genero)
summary(data$Genero)
data[is.na(data$Genero) | data$Genero == "M", ]$Genero = "Masculino"
data[data$Genero == 'F' | data$Genero == 'Fem', ]$Genero = 'Feminino'
data$Genero = factor(data$Genero)
summary(data$Idade)
median_age = median(data$Idade)
data[data$Idade < 0 | data$Idade > 110, ]$Idade = median_age
data[data$Idade <0 | data$Idade > 110,]
☻#LookingForDuplicateData = data[duplicated(data$Id), ]
data = data[-c(82),]
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate
duplicate_id = data[data$Id == 81, ]
duplicate
data = data[-c(82),]
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate
data = data[-c(82),]
duplicate_id
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate_id
data = data[-c(82),]
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate_id
unique(data$Estado)
summary(data$Estado)
data[!data$Estado %in% c('RS','SC','PR'),]$Estado = 'RS'
summary(data)
summary(data$Estado)
summary(data$Estado)
unique(data$Estado)
tado)
summary(data$Estado)
summary(data$Estado)
data = factor(data%Estado)
data = factor(data$Estado)
summary(data$Estado)
summary(data$Estado)
data
summary(data&Estado)
summary(data$Estado)
summary(data$Estado)
unique(data$Estado)
# Importando os dados
# Separador de colunas      # Definido as string como fatores
data = read.csv('Churn.csv', sep = ';', na.strings = '', stringsAsFactors = T)
head(data)
summary(data)
colnames(data) = c(
'Id',
'Score',
'Estado',
'Genero',
'Idade',
'Patrimonio',
'Saldo',
'Produtos',
'TemCartCredito',
'Ativo',
'Salario',
'Saiu'
)
head(data)
OccurrencesofStates <- table(data$Estado)
barplot(
OccurrencesofStates,
main = 'Ocorrência dos estados',
xlab = 'Estado',
ylab = 'Quantidade'
)
OccurrencesofGender <- table(data$Genero)
barplot(
OccurrencesofGender,
main = 'Ocorrência dos Gêneros',
xlab = 'Gênero',
ylab = 'Quantidade'
)
print('Score')
summary(data$Score)
boxplot(
data$Score,
main = 'Resumo do Score dos Cliente',
ylab = 'Score'
)
hist(
data$Score,
main = 'Resumo do Score dos Clientes',
xlab = 'Score',
ylab = 'Frequência'
)
print('Idade')
summary(data$Idade)
boxplot(data$Idade)
hist(data$Idade)
print('Saldo')
summary(data$Saldo)
boxplot(data$Saldo)
hist(data$Saldo)
print('Salario')
print(data$Salario)
summary(data$Salario)
boxplot(data$Salario)
hist(data$Salario)
data[!complete.cases(data),]
summary(data$Salario)
median(data$Salario, na.rm = T)
data[is.na(data$Salario),]$Salario = median(data$Salario,na.rm = T)
data[!complete.cases(data$Salario),]
summary(data$Salario)
data$Genero
unique(data$Genero)
summary(data$Genero)
data[is.na(data$Genero) | data$Genero == "M", ]$Genero = "Masculino"
data[data$Genero == 'F' | data$Genero == 'Fem', ]$Genero = 'Feminino'
data$Genero = factor(data$Genero)
summary(data$Idade)
median_age = median(data$Idade)
data[data$Idade < 0 | data$Idade > 110, ]$Idade = median_age
data[data$Idade <0 | data$Idade > 110,]
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate_id
data = data[-c(82),]
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate_id
unique(data$Estado)
summary(data$Estado)
data[!data$Estado %in% c('RS','SC','PR'),]$Estado = 'RS'
summary(data$Estado)
data = factor(data$Estado)
summary(data$Estado)
summary(data$Estado)
# Importando os dados
# Separador de colunas      # Definido as string como fatores
data = read.csv('Churn.csv', sep = ';', na.strings = '', stringsAsFactors = T)
head(data)
summary(data)
colnames(data) = c(
'Id',
'Score',
'Estado',
'Genero',
'Idade',
'Patrimonio',
'Saldo',
'Produtos',
'TemCartCredito',
'Ativo',
'Salario',
'Saiu'
)
head(data)
OccurrencesofStates <- table(data$Estado)
barplot(
OccurrencesofStates,
main = 'Ocorrência dos estados',
xlab = 'Estado',
ylab = 'Quantidade'
)
OccurrencesofGender <- table(data$Genero)
barplot(
OccurrencesofGender,
main = 'Ocorrência dos Gêneros',
xlab = 'Gênero',
ylab = 'Quantidade'
)
print('Score')
summary(data$Score)
boxplot(
data$Score,
main = 'Resumo do Score dos Cliente',
ylab = 'Score'
)
hist(
data$Score,
main = 'Resumo do Score dos Clientes',
xlab = 'Score',
ylab = 'Frequência'
)
print('Idade')
summary(data$Idade)
boxplot(data$Idade)
hist(data$Idade)
print('Saldo')
summary(data$Saldo)
boxplot(data$Saldo)
hist(data$Saldo)
print('Salario')
print(data$Salario)
summary(data$Salario)
boxplot(data$Salario)
hist(data$Salario)
data[!complete.cases(data),]
summary(data$Salario)
median(data$Salario, na.rm = T)
data[is.na(data$Salario),]$Salario = median(data$Salario,na.rm = T)
data[!complete.cases(data$Salario),]
summary(data$Salario)
data$Genero
unique(data$Genero)
summary(data$Genero)
data[is.na(data$Genero) | data$Genero == "M", ]$Genero = "Masculino"
data[data$Genero == 'F' | data$Genero == 'Fem', ]$Genero = 'Feminino'
data$Genero = factor(data$Genero)
summary(data$Idade)
median_age = median(data$Idade)
data[data$Idade < 0 | data$Idade > 110, ]$Idade = median_age
data[data$Idade <0 | data$Idade > 110,]
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate_id
data = data[-c(82),]
LookingForDuplicateData = data[duplicated(data$Id), ]
LookingForDuplicateData
duplicate_id = data[data$Id == 81, ]
duplicate_id
#unique(data$Estado)
#summary(data$Estado)
#data[!data$Estado %in% c('RS','SC','PR'),]$Estado = 'RS'
#summary(data$Estado)
#data = factor(data$Estado)
#summary(data$Estado)
unique(data$Estado)
summary(data$Estado)
data[!data$Estado %in% c('RS','SC','PR'),]$Estado = 'RS'
summary(data$Estado)
data$estado = factor(data$Estado)
summary(data$Estado)
summary(data$Estado)
summary(data$Estado)
data$estado = factor(data$Estado)
summary(data$Estado)
data[!data$Estado %in% c('RS','SC','PR'),]$Estado = 'RS'
data$estado = factor(data$Estado)
summary(data$Estado)
unique(data$Estado)
summary(data$Estado)
data[!data$Estado %in% c('RS','SC','PR'),]$Estado = 'RS'
summary(data$Estado)
data$Estado = factor(data$Estado)
summary(data$Estado)
StandardDeviation = sd(data$Salario, na.rm = T)
StandardDeviation
boxplot(data$Salario)
ata$Salario >= 2 * StandardDeviation, ]
data$Salario >= 2 * StandardDeviation,
data$Salario >= 2 * StandardDeviation
data$Salario >= 2
data[data$Salario >= 2 * StandardDeviation, ]$Salario
data[data$Salario >= 5 * StandardDeviation, ]$Salario
data[data$Salario >= StandardDeviation, ]$Salario
data[data$Salario >= * StandardDeviation, ]$Salario
data[data$Salario >= 2 * StandardDeviation, ]$Salario
boxplot(data$Salario)$out
boxplot(data$Salario, outline = F)
boxplot(data$Salario)$out
boxplot(data$Salario, outline = F)
boxplot(data$Salario)$out
boxplot(data$Salario)$out
boxplot(data$Salario, outline = F)
boxplot(data$Salario)
boxplot(data$Salario)$out
boxplot(data$Salario)$out
MedianWage = median(data$Salario)
MedianWage
data[data$Salario >= 2 * StandardDeviation, ]$Salario = MedianWage
boxplot(data$Salario)
boxplot(data$Salario)$out
boxplot(data$Salario, outline = F)
MedianWage
r --version
DataFrame = read.csv('tempo.csv')
DataFrame
DataFrame = read.csv('tempo.csv', sep = ';')
DataFrame
unique(DataFrame)
summary(DataFrame)
summary(DataFrame$Aparencia)
summary(DataFrame$Temperatura)
summary(DataFrame$Umidade)
summary(DataFrame$Vento)
summary(DataFrame$Jogar)
unique(DataFrame$Temperatura)
summary(DataFrame$Temperatura)
summary(DataFrame$Aparencia)
summary(DataFrame$Temperatura)
summary(DataFrame$Umidade)
summary(DataFrame$Vento)
summary(DataFrame$Jogar)
summary(DataFrame$Umidade)
summary(DataFrame$Umidade)
DataFrame[!complete.cases(DataFrame)]
summary(DataFrame$Umidade)
DataFrame[!complete.cases(DataFrame),]
summary(DataFrame$Umidade)
DataFrame[complete.cases(DataFrame),]
summary(DataFrame$Umidade)
DataFrame[!complete.cases(DataFrame),]
mean(DataFrame$Umidade)
mean(DataFrame$Umidade)
mean(DataFrame$Umidade, na.rm = T)
DataFrame[!complete.cases(DataFrame),]
DataFrame[is.na(DataFrame$Umidade),]$Umidade = MeanHumidity
MeanHumidity = mean(DataFrame$Umidade, na.rm = T)
DataFrame[is.na(DataFrame$Umidade),]$Umidade = MeanHumidity
summary(DataFrame$Umidade)
unique(DataFrame)
unique(DataFrame$Aparencia, DataFrame$Temperatura, DataFrame$Umidade)
colnames(DataFrame)
colnames(DataFrame)
unique(DataFrame$Aparencia)
unique(DataFrame$Temperatura)
unique(DataFrame$Umidade$)
colnames(DataFrame)
unique(DataFrame$Aparencia)
unique(DataFrame$Temperatura)
unique(DataFrame$Umidade)
unique(DataFrame$Vento)
unique(DataFrame$Jogar)
unique(DataFrame$Temperatura)
unique(DataFrame$Aparencia)
summary(DataFrame$Aparencia)
table(DataFrame$Aparencia)
DataFrame[DataFrame$Aparencia == ""Menos]
DataFrame[(DataFrame$Aparencia == "menos"),]
table(DataFrame$Aparencia)
DataFrame[(DataFrame$Aparencia == "menos"),] = 0
DataFrame[(DataFrame$Aparencia == "menos"),]
unique(DataFrame$Aparencia)
DataFrame[(DataFrame$Aparencia == "menos"),] = NA
unique(DataFrame$Aparencia)
View(DataFrame)
DataFrame = read.csv('tempo.csv', sep = ';')
DataFrame
summary(DataFrame$Aparencia)
summary(DataFrame$Temperatura)
summary(DataFrame$Umidade)
summary(DataFrame$Vento)
summary(DataFrame$Jogar)
summary(DataFrame$Umidade)
MeanHumidity = mean(DataFrame$Umidade, na.rm = T)
DataFrame[!complete.cases(DataFrame),]
DataFrame[is.na(DataFrame$Umidade),]$Umidade = MeanHumidity
summary(DataFrame$Umidade)
colnames(DataFrame)
unique(DataFrame$Aparencia)
unique(DataFrame$Temperatura)
unique(DataFrame$Umidade)
unique(DataFrame$Vento)
unique(DataFrame$Jogar)
#unique(DataFrame$Aparencia)
#table(DataFrame$Aparencia)
#DataFrame[(DataFrame$Aparencia == "menos"),] = NA
unique(DataFrame$Aparencia)
DataFrame[(DataFrame$Aparencia == "menos"),]
unique(DataFrame$Aparencia)
table(DataFrame$Aparencia)
DataFrame[DataFrame$Aparencia == "menos", ]$Aparencia = 'chuva'
unique(DataFrame$Aparencia)
tail(DataFrame)
tail(DataFrame, 20
tail(DataFrame, 20)
tail(DataFrame, 10)
tail(DataFrame, 11)
tail(DataFrame, 12)
tail(DataFrame, 13)
tail(DataFrame, 16)
DataFrame$Jogar <- NULL
DataFrame
View(DataFrame)
DataFrame = read.csv('tempo.csv', sep = ';')
DataFrame
summary(DataFrame$Aparencia)
summary(DataFrame$Temperatura)
summary(DataFrame$Umidade)
summary(DataFrame$Vento)
summary(DataFrame$Jogar)
summary(DataFrame$Umidade)
MeanHumidity = mean(DataFrame$Umidade, na.rm = T)
DataFrame[!complete.cases(DataFrame),]
DataFrame[is.na(DataFrame$Umidade),]$Umidade = MeanHumidity
summary(DataFrame$Umidade)
colnames(DataFrame)
unique(DataFrame$Aparencia)
unique(DataFrame$Temperatura)
unique(DataFrame$Umidade)
unique(DataFrame$Vento)
unique(DataFrame$Jogar)
unique(DataFrame$Aparencia)
table(DataFrame$Aparencia)
DataFrame[DataFrame$Aparencia == "menos", ]$Aparencia = 'chuva'
tail(DataFrame, 16)
DataFrame$Vento <- NULL
DataFrame
DataFrame[(DataFrame$Temperatura > -130) & (DataFrame$Temperatura < 130)]
DataFrame[(DataFrame$Temperatura > -130) & (DataFrame$Temperatura < 130), ]
DataFrame[(DataFrame$Temperatura > -130)
& (DataFrame$Temperatura < 130)
& (DataFrame$Umidade >= 0)
& (DataFrame$Umidade <= 100), ]
DataFrame
DataFrame = DataFrame[(DataFrame$Temperatura > -130)
& (DataFrame$Temperatura < 130)
& (DataFrame$Umidade >= 0)
& (DataFrame$Umidade <= 100), ]
DataFrame
DataFrame = DataFrame[(
DataFrame$Temperatura > -130)
& (DataFrame$Temperatura < 130)
& (DataFrame$Umidade >= 0)
& (DataFrame$Umidade <= 100), ]
DataFrame$Vento <- NULL
DataFrame = DataFrame[(
DataFrame$Temperatura > -130)
& (DataFrame$Temperatura < 130)
& (DataFrame$Umidade >= 0)
& (DataFrame$Umidade <= 100), ]
DataFrame
